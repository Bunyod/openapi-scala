variables:
  VERSION: pipeline${CI_PIPELINE_IID}-${CI_COMMIT_SHORT_SHA}
  ECR: 449327390781.dkr.ecr.eu-west-1.amazonaws.com/numberfour
  SBT_OPTS: '-Dsbt.color=always -Dsbt.supershell=false -Xms200m -Xmx500m -Xss2M -XX:MaxMetaspaceSize=500m -XX:MetaspaceSize=200m -XX:+CMSClassUnloadingEnabled'
  COURSIER_CACHE: cache

image: ${ECR}/scala-build-images:openjdk11-scala2.13.1-sbt1.3.3

cache:
  key: one-cache-per-project
  paths:
    - cache/
    - "target/*/resolution-cache"
    - "*/target/*/resolution-cache"

stages:
  - build-test-publish

build and test and publish:
  stage: build-test-publish
  tags:
    - internal
    - medium
  script:
    - export GITHUB_TOKEN=foo # Until we move to Github, this is required for making the application work
    - sbt coverage testOnly coverageReport coverageAggregate
    - if [ ! -z $CI_COMMIT_TAG ]; then export VERSION=$CI_COMMIT_TAG ; fi
    - sed "s/unstable-SNAPSHOT/${VERSION}/" build.sbt > build.sbt.2
    - mv build.sbt.2 build.sbt
    - cat build.sbt | grep version
    - sbt openapi-scala/publish sbt-openapi/publish +openapi-lib/publish +openapi-http4s-lib/publish   # publish must be separate from coverage
  artifacts:
    expire_in: 1 hour
    reports:
      junit:
        - './target/test-reports/*.xml'
        - '**/target/test-reports/*.xml'
