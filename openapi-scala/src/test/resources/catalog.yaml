openapi: 3.0.0

info:
  title: 'enfore Marketplace Catalog API'
  version: "0.0.2"
  description: |
    This is a first design version of the enfore Marketplace API

paths:

  '/products':
    post:
      summary: Add new product to the Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'  
      responses:
        200:
          description: Product was successfully added
        400:
          description: Invalid product payload sent by the client

  '/product?supplierGroupId=xxx&subSupplierId=xxx&supplierProductId=xxx':
    get:
      summary: Get a product from the Marketplace
      parameters:
        - in: query
          name: supplierGroupId
          schema:
            type: string
          required: true
          description: An ID of the Supplier Group
        - in: query
          name: subSupplierId
          schema:
            type: string
          required: true
          description: An ID of a specific supplier within the Supplier Group
        - in: query
          name: supplierProductId
          schema:
            type: string
          required: true
          description: A product ID under which the product is catalogued at the supplier
      responses:
        200:
          description: Asked product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product not found

  '/prices':
    post:
      summary: Add price information to a product (optionally also per customer)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'  
      responses:
        200:
          description: Price was successfully added
        400:
          description: Invalid product payload sent by the client

  '/inventory-import':
    post:
      summary: Import product into an Organization's Inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryImport'  
      responses:
        200:
          description: Product successfully imported into Organization's Inventory
        400:
          description: Invalid product payload sent by the client

components:
  schemas:

    Product:
      description: |
        Represents a product for sale in the Marketplace
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.marketplace.external.catalog.fill.edi.SupplierProductEDIFormat']
        supplierProductId:
          description: |
            An opaque product ID under which the product is catalogued at the supplier
          type: string
        name:
          description: |
            User-facing friendly name of the product
          type: string
        description:
          description: |
            User-facing friendly description of the product
          type: string
        supplierGroupId:
          description: |
            An opaque ID of the Supplier Group (e.g. ServiceBund)
          type: string
        subSupplierId:
          description: |
            An opaque ID of a specific supplier within the Supplier Group (e.g. WebshopFBR)
          type: string
        images:
          description: |
            An array of URLs to Images associated with the Product
          type: array
          items: 
            type: string
            description: |
              An URL of a Product Image
        brand:
          description: |
            Name of the Product Brand
          type: string
        manufacturer:
          description: |
            Name of the Product Manufacturer
          type: string
        gtin:
          description: |
            GTIN or EAN of the Product
          type: string
        unit:
          # description: |
          #   Quantity of the Product in the Package
          $ref: '#/components/schemas/Quantity'
        price:
          # description: |
          #   Marketplace-wide Product Price
          $ref: '#/components/schemas/Money'
        supplierCategory:
          description: |
            Complete Category Path to the Product. (e.g. "Food" > "Fruits" > "Apples")
          type: array
          items:
            type: string
            description: |
              User-facing Product Category Name
        origins:
          description: |
            Origin of the Product (Country or Region where the product was manufactured) (e.g. Europe, Germany, Hamburg)
          type: array
          items:
            type: string
            description: |
              User facing product origin
        features:
          description: |
            Product features
          type: array
          items:
            $ref: '#/components/schemas/ProductFeature'
        vatType:
          # description: |
          #   Product vat type
          $ref: '#/components/schemas/VatType'
      required:
        - '@type'
        - supplierGroupId
        - subSupplierId
        - supplierProductId
        - name
        - unit
        - vatType

    ProductFeature:
      description: |
        One of pre-defined product features
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.marketplace.catalog.external.fill.edi.SupplierProductFeatureEDIFormat']
        uuid:
          description: |
            An ID (not actually UUID) of the Feature. These IDs are pre-defined.
          type: string
        value:
          description: |
            String value of the feature
          type: string
        unit:
          # description: |
          #   Feature Unit
          $ref: '#/components/schemas/UnitOfMeasure'
      required:
        - '@type'
        - uuid
        - value

    Price:
      description: |
        A more specific price. Catalog Products can have Prices associated with them that are a part of the Product
        definition. However it is also possible to further constrain Product Price by the Customer. Use this object
        to do that.
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.marketplace.catalog.external.fill.customerspecific.edi.SupplierProductCustomerPriceEDIFormat']
        supplierProductId:
          description: |
            Opaque Product ID as referred to by the Supplier in the initial product import.
          type: string
        supplierGroupId:
          description: |
            ID of the Supplier Group of the Product from the initial product import
          type: string
        subSupplierId:
          description: |
            ID of the Sub Supplier of the Product from the initial product import
          type: string
        supplierCustomerId:
          description: |
            ID of the Customer to constrain the price to. This is the ID the Supplier uses to refer to this customer.
          type: string
        price:
          # description: |
          #   The actual price of the Product for the Customer
          $ref: '#/components/schemas/Money'
      required:
        - '@type'
        - supplierProductId
        - supplierGroupId
        - subSupplierId
        - supplierCustomerId

    InventoryImport:
      description: |
        Triggers import of a Product available in the Marketplace into an Organization
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.marketplace.catalog.external.inventory.edi.InventoryImportRequestEDIFormat']
        supplierProductId:
          description: |
            Opaque Product ID as referred to by the Supplier in the initial product import.
          type: string
        supplierGroupId:
          description: |
            ID of the Supplier Group of the Product from the initial product import
          type: string
        subSupplierId:
          description: |
            ID of the Sub Supplier of the Product from the initial product import
          type: string
        supplierCustomerId:
          description: |
            ID of the Customer to constrain the price to. This is the ID the Supplier uses to refer to this customer.
          type: string
      required:
        - '@type'
        - supplierProductId
        - supplierGroupId
        - subSupplierId
        - supplierCustomerId

    FixedPoint6:
      description: |
        A type that represents a number with 6 decimal places. e.g. in order to represent a 1, set value to "1000000"
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore FixedPoint6
          type: string
          enum: ['n4.lang.FixedPoint6']
        value:
          type: string
      required:
        - '@type'
        - value

    Money:
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.model.common.Money']
        amount:
          $ref: '#/components/schemas/FixedPoint6'
        currency:
          type: string
      required:
        - '@type'
        - amount
        - currency

    UnitOfMeasure:
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.model.common.UnitOfMeasure']
        name:
          type: string
        symbol:
          type: string
        multiplier:
          $ref: '#/components/schemas/FixedPoint6'
      required:
        - '@type'
        - name
        - symbol
        - multiplier

    Quantity:
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.model.common.Quantity']
        value:
          $ref: '#/components/schemas/FixedPoint6'
        unit:
          $ref: '#/components/schemas/UnitOfMeasure'
      required:
        - '@type'
        - value
        - unit

    VatType:
      type: object
      properties:
        '@type':
          description: |
            Constant name of the enfore DataModel Type
          type: string
          enum: ['n4.marketplace.external.fill.edi.VatType']
        value:
          type: string
          enum: [
            'STANDARD_VAT',
            'NO_VAT',
            'REDUCED_VAT',
            'REDUCED_VAT_TAKE_AWAY'
          ]
      required:
        - '@type'
        - value
