{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "enfore Marketplace Catalog API",
    "description" : "This is a first design version of the enfore Marketplace API\n",
    "version" : "0.0.2"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/products" : {
      "post" : {
        "summary" : "Add new product to the Marketplace",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Product was successfully added"
          },
          "400" : {
            "description" : "Invalid product payload sent by the client"
          }
        }
      }
    },
    "/product?supplierGroupId=xxx&subSupplierId=xxx&supplierProductId=xxx" : {
      "get" : {
        "summary" : "Get a product from the Marketplace",
        "parameters" : [ {
          "name" : "supplierGroupId",
          "in" : "query",
          "description" : "An ID of the Supplier Group",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subSupplierId",
          "in" : "query",
          "description" : "An ID of a specific supplier within the Supplier Group",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supplierProductId",
          "in" : "query",
          "description" : "A product ID under which the product is catalogued at the supplier",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Asked product",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "404" : {
            "description" : "Product not found"
          }
        }
      }
    },
    "/prices" : {
      "post" : {
        "summary" : "Add price information to a product (optionally also per customer)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Price"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Price was successfully added"
          },
          "400" : {
            "description" : "Invalid product payload sent by the client"
          }
        }
      }
    },
    "/inventory-import" : {
      "post" : {
        "summary" : "Import product into an Organization's Inventory",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryImport"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Product successfully imported into Organization's Inventory"
          },
          "400" : {
            "description" : "Invalid product payload sent by the client"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Product" : {
        "required" : [ "@type", "name", "subSupplierId", "supplierGroupId", "supplierProductId", "unit", "vatType" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.marketplace.external.catalog.fill.edi.SupplierProductEDIFormat" ]
          },
          "supplierProductId" : {
            "type" : "string",
            "description" : "An opaque product ID under which the product is catalogued at the supplier\n"
          },
          "name" : {
            "type" : "string",
            "description" : "User-facing friendly name of the product\n"
          },
          "description" : {
            "type" : "string",
            "description" : "User-facing friendly description of the product\n"
          },
          "supplierGroupId" : {
            "type" : "string",
            "description" : "An opaque ID of the Supplier Group (e.g. ServiceBund)\n"
          },
          "subSupplierId" : {
            "type" : "string",
            "description" : "An opaque ID of a specific supplier within the Supplier Group (e.g. WebshopFBR)\n"
          },
          "images" : {
            "type" : "array",
            "description" : "An array of URLs to Images associated with the Product\n",
            "items" : {
              "type" : "string",
              "description" : "An URL of a Product Image\n"
            }
          },
          "brand" : {
            "type" : "string",
            "description" : "Name of the Product Brand\n"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Name of the Product Manufacturer\n"
          },
          "gtin" : {
            "type" : "string",
            "description" : "GTIN or EAN of the Product\n"
          },
          "unit" : {
            "$ref" : "#/components/schemas/Quantity"
          },
          "price" : {
            "$ref" : "#/components/schemas/Money"
          },
          "supplierCategory" : {
            "type" : "array",
            "description" : "Complete Category Path to the Product. (e.g. \"Food\" > \"Fruits\" > \"Apples\")\n",
            "items" : {
              "type" : "string",
              "description" : "User-facing Product Category Name\n"
            }
          },
          "origins" : {
            "type" : "array",
            "description" : "Origin of the Product (Country or Region where the product was manufactured) (e.g. Europe, Germany, Hamburg)\n",
            "items" : {
              "type" : "string",
              "description" : "User facing product origin\n"
            }
          },
          "features" : {
            "type" : "array",
            "description" : "Product features\n",
            "items" : {
              "$ref" : "#/components/schemas/ProductFeature"
            }
          },
          "vatType" : {
            "$ref" : "#/components/schemas/VatType"
          }
        },
        "description" : "Represents a product for sale in the Marketplace\n"
      },
      "ProductFeature" : {
        "required" : [ "@type", "uuid", "value" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.marketplace.catalog.external.fill.edi.SupplierProductFeatureEDIFormat" ]
          },
          "uuid" : {
            "type" : "string",
            "description" : "An ID (not actually UUID) of the Feature. These IDs are pre-defined.\n"
          },
          "value" : {
            "type" : "string",
            "description" : "String value of the feature\n"
          },
          "unit" : {
            "$ref" : "#/components/schemas/UnitOfMeasure"
          }
        },
        "description" : "One of pre-defined product features\n"
      },
      "Price" : {
        "required" : [ "@type", "subSupplierId", "supplierCustomerId", "supplierGroupId", "supplierProductId" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.marketplace.catalog.external.fill.customerspecific.edi.SupplierProductCustomerPriceEDIFormat" ]
          },
          "supplierProductId" : {
            "type" : "string",
            "description" : "Opaque Product ID as referred to by the Supplier in the initial product import.\n"
          },
          "supplierGroupId" : {
            "type" : "string",
            "description" : "ID of the Supplier Group of the Product from the initial product import\n"
          },
          "subSupplierId" : {
            "type" : "string",
            "description" : "ID of the Sub Supplier of the Product from the initial product import\n"
          },
          "supplierCustomerId" : {
            "type" : "string",
            "description" : "ID of the Customer to constrain the price to. This is the ID the Supplier uses to refer to this customer.\n"
          },
          "price" : {
            "$ref" : "#/components/schemas/Money"
          }
        },
        "description" : "A more specific price. Catalog Products can have Prices associated with them that are a part of the Product\ndefinition. However it is also possible to further constrain Product Price by the Customer. Use this object\nto do that.\n"
      },
      "InventoryImport" : {
        "required" : [ "@type", "subSupplierId", "supplierCustomerId", "supplierGroupId", "supplierProductId" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.marketplace.catalog.external.inventory.edi.InventoryImportRequestEDIFormat" ]
          },
          "supplierProductId" : {
            "type" : "string",
            "description" : "Opaque Product ID as referred to by the Supplier in the initial product import.\n"
          },
          "supplierGroupId" : {
            "type" : "string",
            "description" : "ID of the Supplier Group of the Product from the initial product import\n"
          },
          "subSupplierId" : {
            "type" : "string",
            "description" : "ID of the Sub Supplier of the Product from the initial product import\n"
          },
          "supplierCustomerId" : {
            "type" : "string",
            "description" : "ID of the Customer to constrain the price to. This is the ID the Supplier uses to refer to this customer.\n"
          }
        },
        "description" : "Triggers import of a Product available in the Marketplace into an Organization\n"
      },
      "FixedPoint6" : {
        "required" : [ "@type", "value" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore FixedPoint6\n",
            "enum" : [ "n4.lang.FixedPoint6" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "description" : "A type that represents a number with 6 decimal places. e.g. in order to represent a 1, set value to \"1000000\"\n"
      },
      "Money" : {
        "required" : [ "@type", "amount", "currency" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.model.common.Money" ]
          },
          "amount" : {
            "$ref" : "#/components/schemas/FixedPoint6"
          },
          "currency" : {
            "type" : "string"
          }
        }
      },
      "UnitOfMeasure" : {
        "required" : [ "@type", "multiplier", "name", "symbol" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.model.common.UnitOfMeasure" ]
          },
          "name" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          },
          "multiplier" : {
            "$ref" : "#/components/schemas/FixedPoint6"
          }
        }
      },
      "Quantity" : {
        "required" : [ "@type", "unit", "value" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.model.common.Quantity" ]
          },
          "value" : {
            "$ref" : "#/components/schemas/FixedPoint6"
          },
          "unit" : {
            "$ref" : "#/components/schemas/UnitOfMeasure"
          }
        }
      },
      "VatType" : {
        "required" : [ "@type", "value" ],
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string",
            "description" : "Constant name of the enfore DataModel Type\n",
            "enum" : [ "n4.marketplace.external.fill.edi.VatType" ]
          },
          "value" : {
            "type" : "string",
            "enum" : [ "STANDARD_VAT", "NO_VAT", "REDUCED_VAT", "REDUCED_VAT_TAKE_AWAY" ]
          }
        }
      }
    }
  }
}